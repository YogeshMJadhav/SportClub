[{"/media/ivision/New Volume/PracticeMode/team_info/src/components/tennisTeam.js":"1","/media/ivision/New Volume/PracticeMode/team_info/src/services/tennis.js":"2","/media/ivision/New Volume/PracticeMode/team_info/src/App.js":"3","/media/ivision/New Volume/PracticeMode/team_info/src/components/cricketTeam.js":"4","/media/ivision/New Volume/PracticeMode/team_info/src/components/swimmingTeam.js":"5","/media/ivision/New Volume/PracticeMode/team_info/src/components/footbTeam.js":"6","/media/ivision/New Volume/PracticeMode/team_info/src/components/Table.js":"7","/media/ivision/New Volume/PracticeMode/team_info/src/services/swimming.js":"8","/media/ivision/New Volume/PracticeMode/team_info/src/components/ActionBar.js":"9","/media/ivision/New Volume/PracticeMode/team_info/src/components/home.js":"10","/media/ivision/New Volume/PracticeMode/team_info/src/services/cricket.js":"11","/media/ivision/New Volume/PracticeMode/team_info/src/services/football.js":"12"},{"size":6824,"mtime":1612358755696,"results":"13","hashOfConfig":"14"},{"size":438,"mtime":1612849818452,"results":"15","hashOfConfig":"14"},{"size":1503,"mtime":1612336582093,"results":"16","hashOfConfig":"14"},{"size":529,"mtime":1612352643318,"results":"17","hashOfConfig":"14"},{"size":594,"mtime":1612352681029,"results":"18","hashOfConfig":"14"},{"size":638,"mtime":1612352538125,"results":"19","hashOfConfig":"14"},{"size":1049,"mtime":1612352729213,"results":"20","hashOfConfig":"14"},{"size":484,"mtime":1612850076632,"results":"21","hashOfConfig":"14"},{"size":288,"mtime":1612352705406,"results":"22","hashOfConfig":"14"},{"size":114,"mtime":1612184778699,"results":"23","hashOfConfig":"14"},{"size":476,"mtime":1612850252649,"results":"24","hashOfConfig":"14"},{"size":484,"mtime":1612850170776,"results":"25","hashOfConfig":"14"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"28","usedDeprecatedRules":"29"},"1jdvxia",{"filePath":"30","messages":"31","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"32","messages":"33","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"29"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"42","usedDeprecatedRules":"29"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/media/ivision/New Volume/PracticeMode/team_info/src/components/tennisTeam.js",["53"],"import React, { useState, useEffect } from 'react';\nimport { Table, Form, Button, Modal } from 'react-bootstrap';\nimport { fetchTennisData, addTennisData, deleteTennisData, updateTennisData } from '../services/tennis';\n\nexport default function TennisTeam() {\n\n    const [ tennisData, setTennisData ] = useState([]);\n    const [show, setAddShow] = useState(false);\n\n    const [ id, setId ] = useState(0)\n    const [ fullName, setFullName ] = useState('')\n    const [ bornDate, setBornDate ] = useState('')\n    const [ plays, setPlays ] = useState('')\n    \n    const [ deleteShow, setDelete ] = useState(false);\n    const [ deleteTennisPlayerData, setDeleteTennisData ] = useState(null)\n    \n    const [ editTennisRecord, setEditTennisRecord ] = useState(null)\n\n    /**** Add tennis records */\n\n    const addTennisRecords = () => {\n        let data = {\n            Full_Name: fullName,\n            Born: bornDate,\n            Plays: plays\n        };\n        addTennisData(data).then((response) => {\n            let tennisNewData = tennisData;\n            tennisNewData.push(response.data);\n            setTennisData([...tennisNewData]);\n        });\n        setAddShow(false);\n    }\n\n    const handleClose = () => setAddShow(false);\n\n    const handleCloseWithClearData = () => {\n        setId(0);\n        setFullName('');\n        setBornDate('');\n        setPlays('');    \n        setAddShow(false);\n    }\n\n    const handleShow = () => setAddShow(true);\n\n    const handleDelete = (event) => {\n        setDeleteTennisData(event);\n        setDelete(true);\n    }\n\n    const handleEditRecord = (event) => {\n        setEditTennisRecord(event)\n        // setTennisData(event);\n        setFullName(event.Full_Name);\n        setBornDate(event.Born);\n        setPlays(event.Plays);\n        setAddShow(true);\n    }\n\n    const updateTennisRecord = () => {\n        let updatedData = {\n            Full_Name: fullName,\n            Born: bornDate,\n            Plays: plays\n        }\n        updateTennisData(editTennisRecord.id, updatedData).then((response) => {\n            let tennisNewData = tennisData;\n            tennisNewData.push(response.data);\n            \n            console.log('response from update tennisData,',tennisData, tennisNewData);\n            setTennisData([...tennisNewData]);\n            setAddShow(false);\n        })\n    }\n    \n    const handleDeleteYes = () => {\n        deleteTennisData(deleteTennisPlayerData).then((response) => {\n            let tennisNewData = tennisData.filter(obj => obj.id !== deleteTennisPlayerData);\n            setTennisData([...tennisNewData]);\n        });\n        setDelete(false);\n    }\n    \n    const handleDeleteNo = () => setDelete(false);\n    \n    useEffect(() => {\n        fetchTennisData().then((res)=> {\n            setTennisData(res.data)\n        })\n    }, [])\n    \n    return(\n        <div>\n        {console.log('editTennisRecord', editTennisRecord)}\n            <Table striped bordered hover>\n                <thead>\n                        {/*****Add players record */}\n                <Button variant=\"primary\" onClick={handleShow}>\n                    Add Players\n                </Button>\n                \n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>Player Info</Modal.Title>\n                    </Modal.Header>\n                    <Form.Group>\n                        <Form.Control type=\"text\" placeholder=\"Full Name\" value={fullName} onChange={e => setFullName(e.target.value)} />\n                        <br />\n                        <Form.Control type=\"text\" placeholder=\"Born\" value={bornDate} onChange={e => setBornDate(e.target.value)} />\n                        <br />\n                        <Form.Control type=\"text\" placeholder=\"Plays\" value={plays} onChange={e => setPlays(e.target.value)} />\n                    </Form.Group>\n                    <Modal.Footer>\n\n                        {\n                            fullName ?\n                            <Button variant=\"secondary\" onClick={handleCloseWithClearData}>\n                                Close with clear\n                            </Button>:\n                            <Button variant=\"secondary\" onClick={handleClose}>\n                                Close\n                            </Button>\n                        }\n                    {\n                    editTennisRecord ?\n                    <Button variant=\"primary\" onClick={updateTennisRecord}>\n                        Save Changes\n                    </Button> : \n                    <Button variant=\"primary\" onClick={addTennisRecords}>\n                        Add\n                    </Button>\n                    }\n                    </Modal.Footer>\n                </Modal>\n\n                {/** Delete players record */}\n\n                    <Modal show={deleteShow} onHide={handleDeleteYes} animation={false}>\n                        <Modal.Header closeButton>\n                        <Modal.Title>Players record</Modal.Title>\n                        </Modal.Header>\n                        <Modal.Body>Sure, you want to delete this records.</Modal.Body>\n                        <Modal.Footer>\n                        <Button variant=\"secondary\" onClick={handleDeleteNo}>\n                            No\n                        </Button>\n                        <Button variant=\"primary\" onClick={handleDeleteYes}>\n                            Yes\n                        </Button>\n                        </Modal.Footer>\n                    </Modal>\n\n                    <tr>\n                    <th>#</th>\n                    <th>Full Name</th>\n                    <th>Born</th>\n                    <th>Plays</th>\n                    <th>Operations</th>\n                    </tr>\n                    \n                </thead>\n                <tbody>\n                    {tennisData.map((item, index) => {\n                        return(\n                            <tr key={index}>\n                                <td>{item.id}</td>\n                                <td>{item.Full_Name}</td>\n                                <td>{item.Born}</td>\n                                <td>{item.Plays}</td>\n                                <td>\n\n                                <Button key={item.id} variant=\"primary\" onClick={() => { handleEditRecord(item)}}>\n                                    Edit\n                                </Button>\n\n                                <Button key={item.id} variant=\"primary\" onClick={() => { handleDelete(item.id)}}>\n                                    Delete\n                                </Button>\n\n                                </td>\n                            </tr>\n                        )\n                    })}\n                </tbody>\n            </Table>\n        </div>\n    )\n}",["54","55"],"/media/ivision/New Volume/PracticeMode/team_info/src/services/tennis.js",[],"/media/ivision/New Volume/PracticeMode/team_info/src/App.js",[],"/media/ivision/New Volume/PracticeMode/team_info/src/components/cricketTeam.js",[],"/media/ivision/New Volume/PracticeMode/team_info/src/components/swimmingTeam.js",[],"/media/ivision/New Volume/PracticeMode/team_info/src/components/footbTeam.js",[],"/media/ivision/New Volume/PracticeMode/team_info/src/components/Table.js",["56","57"],"import React, { useState, useEffect } from 'react';\nimport { Table } from 'react-bootstrap';\nimport ActionBar from './ActionBar';\n\nexport default function TableRecord(props) {\n    return(\n        <Table striped bordered hover>\n          <thead>\n              <tr>\n              <th>#</th>\n              <th>Full Name</th>\n              <th>Born</th>\n              <th>Event / Playing Role</th>\n              <th>Operations</th>\n              </tr>\n          </thead>\n          <tbody>\n              {console.log('props.datasource', props.datasource)}\n              {props.dataSource.map((item, index) => {\n                  return(\n                    <tr key={index}>\n                        <td>{item.id}</td>\n                        <td>{item.Full_Name}</td>\n                        <td>{item.Born}</td>\n                        { item.Playing_Role ? <td>{item.Playing_Role}</td>:<td>{item.Event}</td>}\n                        <ActionBar  />\n                    </tr>\n                  )\n              })}\n          </tbody>\n      </Table>\n    )\n}","/media/ivision/New Volume/PracticeMode/team_info/src/services/swimming.js",[],"/media/ivision/New Volume/PracticeMode/team_info/src/components/ActionBar.js",[],"/media/ivision/New Volume/PracticeMode/team_info/src/components/home.js",[],"/media/ivision/New Volume/PracticeMode/team_info/src/services/cricket.js",[],"/media/ivision/New Volume/PracticeMode/team_info/src/services/football.js",[],{"ruleId":"58","severity":1,"message":"59","line":10,"column":13,"nodeType":"60","messageId":"61","endLine":10,"endColumn":15},{"ruleId":"62","replacedBy":"63"},{"ruleId":"64","replacedBy":"65"},{"ruleId":"58","severity":1,"message":"66","line":1,"column":17,"nodeType":"60","messageId":"61","endLine":1,"endColumn":25},{"ruleId":"58","severity":1,"message":"67","line":1,"column":27,"nodeType":"60","messageId":"61","endLine":1,"endColumn":36},"no-unused-vars","'id' is assigned a value but never used.","Identifier","unusedVar","no-native-reassign",["68"],"no-negated-in-lhs",["69"],"'useState' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]